defaults: &defaults
  working_directory: ~/d3-stencil
  docker:
    - image: circleci/node:latest-browsers

whitelist: &whitelist
  paths:
    - .npmignore
    - .stencil
    - coverage/*
    - docs/*
    - dist/*
    - node_modules/*
    - src/*
    - test/*
    - CHANGELOG.md
    - docker-compose.yml
    - LICENSE.md
    - package.json
    - README.md
    - sonar-properties.js
    - stencil.config.ts
    - tsconfig.json
    - tslint.json

version: 2
jobs:
  checkout:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install Dependencies
          command: npm i

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      - persist_to_workspace:
          root: ~/d3-stencil
          <<: *whitelist

  lint:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/d3-stencil

      - run:
          name: Lint
          command: npm run lint

  test:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/d3-stencil

      - run:
          name: test
          command: npm run test --coverage

      - persist_to_workspace:
          root: ~/d3-stencil
          <<: *whitelist

  coveralls:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/d3-stencil

      - run:
          name: Submit coverage report to Coveralls.io
          command: npm run coveralls

  build:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/d3-stencil

      - run:
          name: Build D3-Stencil
          command: npm run build

      - persist_to_workspace:
          root: ~/d3-stencil
          <<: *whitelist

  deploy:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/d3-stencil

      - run:
          name: Write NPM Token to ~/.npmrc
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - run:
          name: Install dot-json package
          command: npm install dot-json

      - run:
          name: Write version to package.json
          command: $(npm bin)/dot-json package.json version ${CIRCLE_TAG:1}

      - run:
          name: Publish to NPM
          command: npm publish --access=public

workflows:
  version: 2

  build:
    jobs:
      - checkout
      - test:
          requires:
            - checkout
      - lint:
          requires:
            - checkout
      - coveralls:
          requires:
            - test
      - build:
          requires:
            - test
            - lint

release:
  jobs:
    - checkout:
        filters:
          tags:
            only: /v[0-9]+(\.[0-9]+)*/
          branches:
            ignore: /.*/
    - test:
        filters:
          tags:
            only: /v[0-9]+(\.[0-9]+)*/
          branches:
            ignore: /.*/
        requires:
          - checkout
    - lint:
        filters:
          tags:
            only: /v[0-9]+(\.[0-9]+)*/
          branches:
            ignore: /.*/
        requires:
          - checkout
    - coveralls:
        filters:
          tags:
            only: /v[0-9]+(\.[0-9]+)*/
          branches:
            ignore: /.*/
        requires:
          - test
    - build:
        filters:
          tags:
            only: /v[0-9]+(\.[0-9]+)*/
          branches:
            ignore: /.*/
        requires:
          - test
          - lint
    - deploy:
        filters:
          tags:
            only: /v[0-9]+(\.[0-9]+)*/
          branches:
            ignore: /.*/
        requires:
          - build
